<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
-->

<template name="getSheetMetadata" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="spreadsheetId" description="Unique identifier of the spreadsheet"/>
    <parameter name="includeGridData" description="True if grid data should be returned.
                                This parameter is ignored if a field mask was set in the request"/>
    <parameter name="ranges" description="The ranges to retrieve from the spreadsheet"/>
    <parameter name="fields"
               description="Specifying which fields to include in a partial response"/>
    <parameter name="responseVariable"
               description="Name of the variable to which the output of the operation should be assigned."/>
    <parameter name="overwriteBody"
               description="Replace the Message Body in Message Context with the output of the operation (This will remove the payload from the above variable)."/>
    <parameter name="responseVariable" description="Name of the variable to store operation output"/>
    <parameter name="overwriteBody" description="Replace Message Body with operation output"/>
    <sequence>
        <header name="Authorization" expression="fn:concat('Bearer ', $ctx:_ACTIVE_ACCESS_TOKEN_)" scope="transport"/>
        <property name="uri.var.spreadsheetId" expression="$func:spreadsheetId"/>
        <property name="includeGridData" expression="$func:includeGridData"/>
        <property name="ranges" expression="$func:ranges"/>
        <property name="fields" expression="$func:fields"/>
        <script language="rhinoJs">
            <![CDATA[
                //url param variables
                var includeGridData = mc.getProperty("includeGridData");
                var ranges = mc.getProperty("ranges");
                var fields = mc.getProperty("fields");
                //url param processing start
                var urlParamString = '';
                if (includeGridData != "" && includeGridData != null) {
                    urlParamString += '&includeGridData=' + includeGridData;
                }
                if(ranges != "" && ranges != null){
                    var rangesArray = ranges.split(",");
                    for (var i = 0; i < rangesArray.length; ++i) {
                        if (rangesArray[i] != "" && rangesArray[i] != null) {
                            urlParamString += '&ranges=' + rangesArray[i];
                        }
                    }
                }
                if (fields != "" && fields != null) {
                    urlParamString += '&fields=' + fields;
                }
                if(urlParamString != '') {
                    urlParamString = '?' + urlParamString.toString().substring(1);
                }
                mc.setProperty('uri.var.urlParamString', urlParamString);
                //url param processing end
            ]]>
        </script>
        <property name="messageType" value="application/json" scope="axis2"/>
        <filter source="$ctx:spreadsheetBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="get"
                              uri-template="{+uri.var.apiUrl}/{+uri.var.spreadsheetId}{+uri.var.urlParamString}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="get"
                              uri-template="{+uri.var.apiUrl}/{+uri.var.spreadsheetId}{+uri.var.urlParamString}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>
