<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
-->

<template name="addRowsAndColumns" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="spreadsheetId" description="Unique identifier of the spreadsheet"/>
    <parameter name="range" description="The A1 notation of the values to retrieve"/>
    <parameter name="insertDataOption" description="How the input data should be inserted"/>
    <parameter name="valueInputOption" description="How the input data should be interpreted"/>
    <parameter name="fields"
               description="Specifying which fields to include in a partial response"/>
    <parameter name="majorDimension" description="The major dimension that results should use"/>
    <parameter name="values" description="The data that was to be written"/>
    <parameter name="responseVariable"
               description="Name of the variable to which the output of the operation should be assigned."/>
    <parameter name="overwriteBody"
               description="Replace the Message Body in Message Context with the output of the operation (This will remove the payload from the above variable)."/>
    <parameter name="responseVariable" description="Name of the variable to store operation output"/>
    <parameter name="overwriteBody" description="Replace Message Body with operation output"/>
    <sequence>
        <header name="Authorization" expression="fn:concat('Bearer ', $ctx:_ACTIVE_ACCESS_TOKEN_)" scope="transport"/>
        <property name="uri.var.spreadsheetId" expression="$func:spreadsheetId"/>
        <property name="uri.var.range" expression="$func:range"/>
        <property name="insertDataOption" expression="$func:insertDataOption"/>
        <property name="uri.var.valueInputOption" expression="$func:valueInputOption"/>
        <property name="fields" expression="$func:fields"/>
        <property name="majorDimension" expression="$func:majorDimension"/>
        <property name="values" expression="$func:values"/>
        <script language="rhinoJs">
            <![CDATA[
                //url param variables
                var insertDataOption = mc.getProperty("insertDataOption");
                var fields = mc.getProperty("fields");
                //url param processing start
                var urlParamString = '';
                if (insertDataOption != "" && insertDataOption != null) {
                    urlParamString += '&insertDataOption=' + insertDataOption;
                }
                if (fields != "" && fields != null) {
                    urlParamString += '&fields=' + fields;
                }
                mc.setProperty('uri.var.urlParamString', urlParamString);
                //url param processing end
                //request body param variables
                var majorDimension = mc.getProperty("majorDimension");
                var values = mc.getProperty("values");
                //request body param processing start
                payload = {};
                if (majorDimension != null && majorDimension != "") {
                        payload.majorDimension = majorDimension;
                }
                if (values != null && values != "" && values!= []) {
                        payload.values = eval("("+values+")");
                }
                mc.setPayloadJSON(payload);
                //request body param processing end
            ]]>
        </script>
        <property name="messageType" value="application/json" scope="axis2"/>
        <filter source="$ctx:spreadsheetBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/{+uri.var.spreadsheetId}/values/{+uri.var.range}:append?valueInputOption={+uri.var.valueInputOption}{+uri.var.urlParamString}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/{+uri.var.spreadsheetId}/values/{+uri.var.range}:append?valueInputOption={+uri.var.valueInputOption}{+uri.var.urlParamString}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>
